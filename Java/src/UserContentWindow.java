public class UserContentWindow extends javax.swing.JFrame {

    /**
     * Creates new form UserContentWindow
     */
    public UserContentWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        backToControlButton = new javax.swing.JButton();
        makePostButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        postContent = new ContentPanel();
        infoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 36)); // NOI18N
        titleLabel.setText("No user loaded.");

        backToControlButton.setText("Back to Control");
        backToControlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToControlButtonActionPerformed(evt);
            }
        });

        makePostButton.setText("Make Post");
        makePostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePostButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh Posts");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        infoLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 14)); // NOI18N
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backToControlButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(previousButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(makePostButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton))
                    .addComponent(postContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backToControlButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(postContent, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextButton)
                    .addComponent(previousButton)
                    .addComponent(refreshButton)
                    .addComponent(infoLabel)
                    .addComponent(makePostButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Basic components for functionality, such as the username of content which should be loaded
    public DataFramework framework = new DataFramework();
    Post[] posts;
    int postCount = 0;
    boolean is_other_user = false;
    String username;
    
    //Simple close window button
    private void backToControlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToControlButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_backToControlButtonActionPerformed

    //Opens a new post form and sets the framework of that of the current instance
    private void makePostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePostButtonActionPerformed
        NewPostForm form = new NewPostForm(framework);
        form.setVisible(true);
    }//GEN-LAST:event_makePostButtonActionPerformed

    //When the user asks to refresh
    public void refreshPosts(boolean getNewPosts){
        if(getNewPosts){
            //Set the username, get the posts from the current framework, reset post count, other small actions
            infoLabel.setText("User " + username + " has no posts!");
            posts = framework.getPosts(username);
            postCount = 0;
            postContent.framework = framework;
            titleLabel.setText(username + "'s posts");
            makePostButton.setEnabled(!is_other_user);
            System.out.println(is_other_user);
        }
        postContent.postContent = posts[postCount];
        postContent.refreshContent();
        infoLabel.setText("Post " + (postCount+1) + " of " + posts.length);
    }
    
    //Refresh
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refreshPosts(true);
    }//GEN-LAST:event_refreshButtonActionPerformed

    //When the user presses next scroll through the posts by one, same with previous (below)
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        postCount++;
        if(postCount > posts.length-1){
            postCount = 0;
        }
        refreshPosts(false);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        postCount--;
        if(postCount < 0){
            postCount = posts.length-1;
        }
        refreshPosts(false);
    }//GEN-LAST:event_previousButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToControlButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JButton makePostButton;
    private javax.swing.JButton nextButton;
    private ContentPanel postContent;
    private javax.swing.JButton previousButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
